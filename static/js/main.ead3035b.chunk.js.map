{"version":3,"sources":["components/modal/Modal.jsx","components/scoreBoard/ScoreBoard.jsx","components/gameOver/GameOver.jsx","components/grid/Grid.jsx","App.jsx","index.js"],"names":["Modal","open","onClose","width","length","configGrid","configSpeed","useState","state","setState","difficulty","setDifficulty","lengthList","i","push","widthList","handleChange","e","name","target","value","ReactDom","createPortal","className","action","htmlFor","onChange","map","d","index","onClick","type","document","getElementById","ScoreBoard","score","gameOver","window","location","reload","Grid","isOpen","setIsOpen","startGame","setStartGame","setLength","setWidth","setScore","row","col","clicked","coordinates","setCoordinates","setGameOver","speed","setSpeed","addCell","x","y","cellProperties","gridStyle","gridTemplateColumns","gridTemplateRows","gridRef","useRef","current","columnCount","rowCount","createMap","colors","randomColor","colorIndex","Math","floor","random","isGameOver","lastRow","style","backgroundColor","useEffect","intervalId","setInterval","nextAnimationStep","clearInterval","j","h","processCellHelper","surrRow","surrCol","isOutOfBounds","prevScore","outOfBounds","rowIsEmpty","rowNum","breakPoint","processCell","cols","cells","id","newLength","newWidth","Number","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ead3035b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./modal.scss\";\r\nimport ReactDom from \"react-dom\";\r\nimport { useState } from \"react\";\r\nexport default function Modal({\r\n  open,\r\n  onClose,\r\n  width,\r\n  length,\r\n  configGrid,\r\n  configSpeed,\r\n}) {\r\n  const maxLength = 10;\r\n  const maxWidth = 10;\r\n\r\n  const [state, setState] = useState({ width: width, length: length });\r\n  const [difficulty, setDifficulty] = useState(\"Easy\");\r\n  if (!open) {\r\n    return null;\r\n  }\r\n  const lengthList = [];\r\n  for (let i = 1; i <= maxLength; i++) {\r\n    lengthList.push(i);\r\n  }\r\n  const widthList = [];\r\n  for (let i = 1; i <= maxWidth; i++) {\r\n    widthList.push(i);\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    state[name] = value;\r\n    setState({ ...state });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    onClose();\r\n    configGrid(state.length, state.width);\r\n    configSpeed(difficulty);\r\n  };\r\n  const handleDifficulty = (e) => {\r\n    setDifficulty(e.target.value);\r\n  };\r\n\r\n  return ReactDom.createPortal(\r\n    <>\r\n      <div className=\"overlay\"></div>\r\n      <div className=\"modal\">\r\n        <form action=\"\">\r\n          <label htmlFor=\"length\">Length:</label>\r\n          <select name=\"length\" value={state.length} onChange={handleChange}>\r\n            {lengthList.map((d, index) => (\r\n              <option value={d}>{d}</option>\r\n            ))}\r\n          </select>{\" \"}\r\n          <br />\r\n          <label htmlFor=\"width\">Width: </label>\r\n          <select name=\"width\" value={state.width} onChange={handleChange}>\r\n            {widthList.map((d) => (\r\n              <option value={d}>{d}</option>\r\n            ))}\r\n          </select>{\" \"}\r\n          <br />\r\n          <label htmlFor=\"speed\">Speed: </label>\r\n          <select\r\n            name=\"length\"\r\n            value={state.difficulty}\r\n            onChange={handleDifficulty}\r\n          >\r\n            <option value=\"Easy\">Easy</option>\r\n            <option value=\"Medium\">Medium</option>\r\n            <option value=\"Hard\">Hard</option>\r\n          </select>{\" \"}\r\n          <br />\r\n        </form>\r\n        <button className=\"submit\" onClick={handleSubmit} type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n}\r\n","import React from 'react'\r\nimport \"./scoreBoard.scss\"\r\n\r\nexport default function ScoreBoard({score}) {\r\n    return (\r\n            <h1 className=\"scoreBoard\">{score}</h1>\r\n            \r\n\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./gameOver.scss\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nexport default function Modal({ gameOver }) {\r\n  if (!gameOver) {\r\n    return null;\r\n  }\r\n  function refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  return ReactDom.createPortal(\r\n    <>\r\n      <div className=\"overlay1\"></div>\r\n      <div className=\"modal1\">\r\n        <button onClick={refreshPage} className=\"button\">\r\n          Restart\r\n        </button>\r\n      </div>\r\n    </>,\r\n    document.getElementById(\"portal1\")\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./grid.scss\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport Modal from \"../modal/Modal\";\r\nimport ScoreBoard from \"../scoreBoard/ScoreBoard\";\r\nimport GameOver from \"../gameOver/GameOver\";\r\n\r\nexport default function Grid() {\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [startGame, setStartGame] = useState(false);\r\n  const [length, setLength] = useState(10);\r\n  const [width, setWidth] = useState(5);\r\n  const [score, setScore] = useState(0);\r\n  const [coordinates, setCoordinates] = useState({\r\n    row: 0,\r\n    col: 0,\r\n    clicked: false,\r\n  });\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [speed, setSpeed] = useState(1500);\r\n\r\n  const configGrid = (newLength, newWidth) => {\r\n    setLength(Number(newLength));\r\n    setWidth(Number(newWidth));\r\n  };\r\n  const configSpeed = (difficulty) => {\r\n    if (difficulty === \"Hard\") {\r\n      setSpeed(500);\r\n    } else if (difficulty === \"Medium\") {\r\n      setSpeed(1000);\r\n    } else {\r\n      setSpeed(1500);\r\n    }\r\n  };\r\n\r\n  function createMap(columnCount, rowCount) {\r\n    const map = [];\r\n    for (let x = 0; x < columnCount; x++) {\r\n      map[x] = []; // set up inner array\r\n      for (let y = 0; y < rowCount; y++) {\r\n        addCell(map, x, y);\r\n      }\r\n    }\r\n    return map;\r\n  }\r\n\r\n  function addCell(map, x, y) {\r\n    const cellProperties = [\"cell\", \"cell\" + x + y, \"white\", x, y];\r\n\r\n    map[x][y] = cellProperties; // create a new object on x and y\r\n  }\r\n  // {className: \"cell\", id: \"cell\"+x + y, style:{backgroundColor: \"white\"}}\r\n\r\n  const gridStyle = {\r\n    gridTemplateColumns: \" \",\r\n    gridTemplateRows: \" \",\r\n  };\r\n  for (let i = 0; i < length; i++) {\r\n    gridStyle.gridTemplateRows += \"7% \";\r\n  }\r\n  for (let i = 0; i < width; i++) {\r\n    gridStyle.gridTemplateColumns += \"7% \";\r\n  }\r\n  const gridRef = useRef();\r\n\r\n  gridRef.current = createMap(length, width);\r\n\r\n  const colors = [\"blue\", \"red\", \"yellow\", \"green\"];\r\n  const randomColor = () => {\r\n    const colorIndex = Math.floor(Math.random() * colors.length);\r\n    const color = colors[colorIndex];\r\n    return color;\r\n  };\r\n\r\n  const isGameOver = () => {\r\n    let gameOver = false;\r\n    const lastRow = length - 1;\r\n    for (let i = 0; i < width; i++) {\r\n      if (\r\n        document.getElementById(\"cell\" + lastRow + i).style.backgroundColor !==\r\n        \"white\"\r\n      ) {\r\n        setGameOver(true);\r\n        gameOver = true;\r\n        break;\r\n      }\r\n    }\r\n    return gameOver;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (startGame && isGameOver() === false) {\r\n      const intervalId = setInterval(() => {\r\n        nextAnimationStep();\r\n      }, speed);\r\n      return () => {\r\n        clearInterval(intervalId);\r\n      };\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [startGame]);\r\n\r\n  const nextAnimationStep = () => {\r\n    if (isGameOver() === false) {\r\n      //Copy domStyles to gridRef\r\n      const backgroundColor = 2;\r\n      for (let i = 0; i < length; i++) {\r\n        for (let j = 0; j < width; j++) {\r\n          gridRef.current[i][j][backgroundColor] = document.getElementById(\r\n            \"cell\" + i + j\r\n          ).style.backgroundColor;\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < length - 1; i++) {\r\n        let h = i + 1;\r\n        for (let j = 0; j < width; j++) {\r\n          document.getElementById(\"cell\" + h + j).style.backgroundColor =\r\n            gridRef.current[i][j][backgroundColor];\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < width; i++) {\r\n        document.getElementById(\"cell\" + 0 + i).style.backgroundColor =\r\n          randomColor();\r\n      }\r\n\r\n      // setGrid(newGrid)\r\n    }\r\n  };\r\n\r\n  const processCellHelper = (surrRow, surrCol, row, col) => {\r\n    if (\r\n      !isOutOfBounds(surrRow, surrCol) &&\r\n      document.getElementById(\"cell\" + surrRow + surrCol).style\r\n        .backgroundColor ===\r\n        document.getElementById(\"cell\" + row + col).style.backgroundColor\r\n    ) {\r\n      document.getElementById(\r\n        \"cell\" + surrRow + surrCol\r\n      ).style.backgroundColor = \"white\";\r\n      setScore((prevScore) => prevScore + 1);\r\n    }\r\n  };\r\n  const processCell = (row, col) => {\r\n    if (\r\n      document.getElementById(\"cell\" + row + col).style.backgroundColor !==\r\n      \"white\"\r\n    ) {\r\n      processCellHelper(row - 1, col, row, col);\r\n      processCellHelper(row + 1, col, row, col);\r\n      processCellHelper(row - 1, col - 1, row, col);\r\n      processCellHelper(row + 1, col + 1, row, col);\r\n      processCellHelper(row, col - 1, row, col);\r\n      processCellHelper(row, col + 1, row, col);\r\n      processCellHelper(row + 1, col - 1, row, col);\r\n      processCellHelper(row - 1, col + 1, row, col);\r\n      document.getElementById(\"cell\" + row + col).style.backgroundColor =\r\n        \"white\";\r\n      setScore((prevScore) => prevScore + 1);\r\n    }\r\n    for (let i = length - 2; i > 0; i--) {\r\n      if (rowIsEmpty(i)) {\r\n        //Copy domStyles to gridRef\r\n        const backgroundColor = 2;\r\n        for (let i = 0; i < length; i++) {\r\n          for (let j = 0; j < width; j++) {\r\n            gridRef.current[i][j][backgroundColor] = document.getElementById(\r\n              \"cell\" + i + j\r\n            ).style.backgroundColor;\r\n          }\r\n        }\r\n        for (let breakPoint = i; breakPoint < length - 1; breakPoint++) {\r\n          for (let j = 0; j < width; j++) {\r\n            document.getElementById(\r\n              \"cell\" + breakPoint + j\r\n            ).style.backgroundColor =\r\n              gridRef.current[breakPoint + 1][j][backgroundColor];\r\n            document.getElementById(\r\n              \"cell\" + (breakPoint + 1) + j\r\n            ).style.backgroundColor = \"white\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const isOutOfBounds = (row, col) => {\r\n    let outOfBounds = false;\r\n    if (row < 0 || row >= length) {\r\n      outOfBounds = true;\r\n    } else if (col < 0 || col >= width) {\r\n      outOfBounds = true;\r\n    }\r\n    return outOfBounds;\r\n  };\r\n\r\n  const rowIsEmpty = (rowNum) => {\r\n    for (let i = 0; i < width; i++) {\r\n      if (\r\n        document.getElementById(\"cell\" + rowNum + i).style.backgroundColor !==\r\n        \"white\"\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (coordinates.clicked) {\r\n      processCell(coordinates.row, coordinates.col);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [coordinates]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid\" style={gridStyle}>\r\n        {gridRef.current.map((cols) =>\r\n          cols.map((cells) => (\r\n            <span\r\n              className={cells[0]}\r\n              id={cells[1]}\r\n              style={{ backgroundColor: cells[2] }}\r\n              onClick={() =>\r\n                setCoordinates({\r\n                  row: cells[3],\r\n                  col: cells[4],\r\n                  clicked: true,\r\n                })\r\n              }\r\n            ></span>\r\n          ))\r\n        )}\r\n      </div>\r\n      <button onClick={() => setIsOpen(true)} className=\"settings\">\r\n        Game Settings\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          setStartGame(() => {\r\n            return true;\r\n          })\r\n        }\r\n        className=\"start\"\r\n      >\r\n        Start Game\r\n      </button>\r\n      <Modal\r\n        open={isOpen}\r\n        onClose={() => setIsOpen(false)}\r\n        length={length}\r\n        width={width}\r\n        configGrid={configGrid}\r\n        configSpeed={configSpeed}\r\n      />\r\n      <ScoreBoard score={score} />\r\n      <GameOver gameOver={gameOver} />\r\n    </>\r\n  );\r\n}\r\n","import './App.scss';\nimport Grid from './components/grid/Grid';\n\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"app\">\n        <Grid />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
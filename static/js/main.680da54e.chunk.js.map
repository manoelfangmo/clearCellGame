{"version":3,"sources":["components/modal/Modal.jsx","components/grid/Grid.jsx","App.jsx","index.js"],"names":["Modal","open","onClose","width","setWidth","length","setLength","lengthList","i","push","widthList","ReactDom","createPortal","className","action","for","value","onChange","e","target","map","d","index","name","onClick","type","document","getElementById","Grid","useState","isOpen","setIsOpen","numOfCells","cells","id","gridStyle","gridTemplateColumns","gridTemplateRows","colors","start","setStart","useEffect","style","backgroundColor","data","App","ReactDOM","render","StrictMode"],"mappings":"oQAGe,SAASA,EAAT,GAAqE,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,UAGnE,IAAIL,EACA,OAAO,KAGX,IADA,IAAMM,EAAY,GACVC,EAAE,EAAGA,GANK,GAMUA,IACxBD,EAAWE,KAAKD,GAGpB,IADA,IAAME,EAAW,GACTF,EAAE,EAAGA,GATI,GASUA,IACvBE,EAAUD,KAAKD,GAUnB,OAAOG,IAASC,aACZ,qCACQ,qBAAKC,UAAU,YACf,sBAAKA,UAAU,QAAf,UACA,uBAAMC,OAAO,GAAb,UACI,uBAAOC,IAAI,SAAX,qBACI,wBAAQC,MAAOX,EAAQY,SAbtB,SAACC,GAClBZ,EAAUY,EAAEC,OAAOH,QAYH,SACKT,EAAWa,KAAI,SAACC,EAAEC,GAAH,OACZ,wBAAQN,MAAOK,EAAf,SAAmBA,SAJnC,IAMkB,uBAEd,uBAAON,IAAI,QAAX,sBACI,wBAAQC,MAAOb,EAAOc,SAjBtB,SAACC,GACjBd,EAASc,EAAEC,OAAOH,QAgBF,SACKN,EAAUU,KAAI,SAACC,GAAD,OACX,wBAAQL,MAAOK,EAAf,SAAmBA,SAXnC,IAckB,uBAEd,uBAAON,IAAI,QAAX,sBACI,wBAAQQ,KAAK,WAjBrB,IAmBkB,0BAGlB,wBAAQC,QAAStB,EAASuB,KAAK,SAA/B,0BAKRC,SAASC,eAAe,WCnDjB,SAASC,IAMpB,IALA,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,IAArC,mBAAOxB,EAAP,KAAeC,EAAf,KACA,EAA0BuB,mBAAS,GAAnC,mBAAO1B,EAAP,KAAcC,EAAd,KACM4B,EAAa3B,EAASF,EACtB8B,EAAQ,GACLzB,EAAI,EAAGA,EAAIwB,EAAYxB,IAC5ByB,EAAMxB,KAAK,CAACI,UAAW,OAASqB,GAAI,OAAO1B,IAO/C,IAJA,IAAM2B,EAAY,CACdC,oBAAqB,IACrBC,iBAAkB,KAEb7B,EAAE,EAAGA,EAAGH,EAAQG,IACrB2B,EAAUE,kBAAoB,MAElC,IAAK,IAAI7B,EAAE,EAAGA,EAAGL,EAAOK,IACpB2B,EAAUC,qBAAuB,MAGrC,IAAME,EAAS,CAAE,OAAQ,MAAO,SAAU,SAE1C,EAA0BT,oBAAS,GAAnC,mBAAOU,EAAP,KAAcC,EAAd,KAQA,OAPAC,qBAAU,WACHF,IACCb,SAASC,eAAe,SAASe,MAAMC,gBAAkBL,EAAO,OAMpE,qCACI,qBAAKzB,UAAU,OAAO6B,MAAOP,EAA7B,SACMF,EAAMb,KAAI,SAACwB,GAAD,OACP,sBAAM/B,UAAW+B,EAAK/B,UAA4BqB,GAAIU,EAAKV,IAArBU,EAAKtB,YAIpD,wBAAQE,QAAS,kBAAKO,GAAU,IAAOlB,UAAU,WAAjD,2BACA,wBAAQW,QAAS,kBAAKgB,GAAS,IAAM3B,UAAU,QAA/C,wBACA,cAACb,EAAD,CAAOC,KAAM6B,EAAQ5B,QAAS,kBAAK6B,GAAU,IAAQ1B,OAAQA,EAC7DC,UAAWA,EAAWH,MAAOA,EAAOC,SAAUA,OChC3CyC,MATf,WAEE,OACE,qBAAKhC,UAAU,MAAf,SACI,cAACe,EAAD,OCLRkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASC,eAAe,W","file":"static/js/main.680da54e.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./modal.scss\"\r\nimport ReactDom from 'react-dom'\r\nexport default function Modal({open, onClose, width, setWidth, length, setLength}) {\r\n    const maxLength = 10;\r\n    const maxWidth = 10;\r\n    if(!open){\r\n        return null\r\n    }\r\n    const lengthList= [];\r\n    for(let i=1; i<= maxLength; i++){\r\n        lengthList.push(i);\r\n    }\r\n    const widthList= []\r\n    for(let i=1; i<= maxWidth; i++){\r\n        widthList.push(i);\r\n    }\r\n\r\n    const changeLength = (e) => {\r\n        setLength(e.target.value);\r\n    }\r\n    const changeWidth = (e) =>{\r\n        setWidth(e.target.value);\r\n    }\r\n\r\n    return ReactDom.createPortal(\r\n        <>\r\n                <div className=\"overlay\"></div>\r\n                <div className=\"modal\">\r\n                <form action=\"\">\r\n                    <label for=\"length\">Length:</label>\r\n                        <select value={length} onChange={changeLength}>\r\n                            {lengthList.map((d,index) => (\r\n                                <option value={d}>{d}</option>\r\n                            ))}\r\n                        </select> <br />\r\n\r\n                    <label for=\"width\">Width:  </label>\r\n                        <select value={width} onChange={changeWidth}>\r\n                            {widthList.map((d) => (\r\n                                <option value={d}>{d}</option>\r\n                            ))}\r\n\r\n                        </select> <br />\r\n\r\n                    <label for=\"speed\">Speed:  </label>\r\n                        <select name=\"length\">\r\n\r\n                        </select> <br />\r\n                        \r\n                </form>    \r\n                <button onClick={onClose} type=\"submit\">Submit</button>\r\n\r\n                </div>\r\n        \r\n        </>,\r\n        document.getElementById('portal')\r\n\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport \"./grid.scss\"\r\nimport {useState, useEffect} from \"react\"\r\nimport Modal from \"../modal/Modal\"\r\n\r\nexport default function Grid() {\r\n    const [isOpen, setIsOpen] = useState(true)\r\n    const [length, setLength] = useState(10);\r\n    const [width, setWidth] = useState(5);\r\n    const numOfCells = length * width;\r\n    const cells = [];\r\n    for (let i = 0; i < numOfCells; i++){\r\n        cells.push({className: \"cell\" , id: \"cell\"+i})\r\n    };\r\n\r\n    const gridStyle = {\r\n        gridTemplateColumns: \" \",\r\n        gridTemplateRows: \" \"\r\n    }\r\n    for (let i=0; i< length; i++){\r\n        gridStyle.gridTemplateRows += \"7% \"\r\n    }\r\n    for (let i=0; i< width; i++){\r\n        gridStyle.gridTemplateColumns += \"7% \"\r\n    }\r\n    \r\n    const colors = [ \"blue\", \"red\", \"yellow\", \"green\"];\r\n\r\n    const [start, setStart] = useState(false)\r\n    useEffect(() => {\r\n        if(start){\r\n            document.getElementById(\"cell0\").style.backgroundColor = colors[0]; \r\n        }\r\n        \r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid\" style={gridStyle}>\r\n                 {cells.map((data) => (\r\n                     <span className={data.className} key={data.index} id={data.id}></span>\r\n                 ))}\r\n\r\n            </div>\r\n            <button onClick={()=> setIsOpen(true)} className=\"settings\">Game Settings</button>\r\n            <button onClick={()=> setStart(true)}className=\"start\">Start Game</button>\r\n            <Modal open={isOpen} onClose={()=> setIsOpen(false)} length={length} \r\n            setLength={setLength} width={width} setWidth={setWidth}  />\r\n        </>\r\n            \r\n\r\n\r\n      \r\n    )\r\n}\r\n","import './App.scss';\nimport Grid from './components/grid/Grid';\n\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"app\">\n        <Grid />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}